{
 
  "Description" : "Template to start a git server instance. Note this is not production quality template",

  "Parameters" : {
    "InstanceType" : {
      "Description" : "What type of instance to be used.  As the load increases, better disk IO will be needed",
      "Type" : "String",
      "AllowedValues" : [ "t1.micro",
      	"m1.small","m1.medium","m1.large", "m1.xlarge",
      	"m2.xlarge","m2.2xlarge","m2.4xlarge",
      	"m3.xlarge","m3.2xlarge",
      	"c1.medium","c1.xlarge","cc2.8xlarge",
      	"c3.2xlarge"
      	],
      "Default": "c3.2xlarge",
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "KeyName" : {
      "Description" : "What key allows SSH access",
      "Type" : "String"
    },
    "SSHLocation" : {
      "Description" : "Which IP addresses are allowed to ssh.  Note: Default is very unsecure",
      "Type": "String",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Enter a valid IP in x.x.x.x/x CIDR form ."
   },
   "Zone" : {
      "Description" : "Which AWS zone to use",
      "Type": "String",
      "ConstraintDescription": "Must be a valid zone.",
      "AllowedValues" : ["us-east-1d", "us-east-1a", "us-east-1c", "us-west-2a", "us-west-2b", "us-west-2c"]
   },
   "MailUser" : {
      "Description" : "What is the username in your AWS IAM for mails",
      "Type": "String",
      "ConstraintDescription": "Must be a valid zone."
   },
   "MailPassword" : {
      "Description" : "What is the password for email user",
      "Type": "String",
      "NoEcho" : "True",
      "ConstraintDescription": "Must be a valid zone."
   }
  },

  "Mappings" : {
    "InstArchMap" : {
      "m1.xlarge"   : { "Arch" : "64" },
      "m2.xlarge"   : { "Arch" : "64" },
      "m2.2xlarge"  : { "Arch" : "64" },
      "m2.4xlarge"  : { "Arch" : "64" },
      "m3.xlarge"   : { "Arch" : "64" },
      "m3.2xlarge"  : { "Arch" : "64" },
      "c1.medium"   : { "Arch" : "64" },
      "c1.xlarge"   : { "Arch" : "64" },
      "c3.2xlarge"   : { "Arch" : "64" },
      "cc2.8xlarge" : { "Arch" : "HVM" }
    },

    "RegionAMIMap" : {
      "us-west-2"      : {
        "32" : "ami-3d50120d",
        "64" : "ami-3d50120d",
        "HVM":"ami-3d50120d" }
    }
  },

  "Resources" : {
    "SecurityGroup": {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH access to select IPs and web access to all",
        "SecurityGroupIngress" : [ 
          {
            "IpProtocol" : "tcp",
            "FromPort" : "22",
            "ToPort" : "22",
            "CidrIp" : { "Ref" : "SSHLocation"}
          },
          {
            "IpProtocol" : "tcp",
            "FromPort" : "80",
            "ToPort" : "80",
            "CidrIp" : "0.0.0.0/0"
          } 
        ]
      }
    },
    "DBAccessRule": {
      "Type" : "AWS::EC2::SecurityGroupIngress",  
      "Properties" : {
        "IpProtocol" : "tcp",  
        "ToPort" : "27017",  
        "FromPort" : "27017",
        "GroupName": { "Ref": "SecurityGroup" },
        "CidrIp" : "127.0.0.1/32"
      }
    }, 
    "GitServer": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": { "Ref": "Zone" },
        "InstanceType": { "Ref": "InstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "Tags" : [
                {"Key" : "Name", "Value" : "Git Server - Tech Challenge"}
        ],
        "Monitoring": true,
        "ImageId" : { "Fn::FindInMap" : [ "RegionAMIMap", { "Ref" : "AWS::Region" },
                                          { "Fn::FindInMap" : [ "InstArchMap", { "Ref" : "InstanceType" },
                                          "Arch" ] } ] },
          "UserData" : { "Fn::Base64" : { "Fn::Join" : ["\n",[
			  "#!/bin/bash -ex",
              "sudo apt-get update",
              "sudo apt-get install -y git",
              "sudo apt-get install -y puppet",
              "cd /tmp",
			  "git clone http://github.com/svpmtrust/autotest.git autotest",
              "cp -r autotest/gitserver/* /etc/puppet",
			  "cd /etc/puppet",
	  		  "puppet apply -v -l /var/log/puppet.log gitserver.pp" ]]}},
          "SecurityGroups" : [ { "Ref" : "SecurityGroup" } ]
      }
    },
    "TestServer": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "AvailabilityZone": { "Ref": "Zone" },
        "InstanceType": { "Ref": "InstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "Tags" : [
                {"Key" : "Name", "Value" : "Test Server - Tech Challenge"}
        ],
        "Monitoring": true,
        "ImageId" : { "Fn::FindInMap" : [ "RegionAMIMap", { "Ref" : "AWS::Region" },
                                          { "Fn::FindInMap" : [ "InstArchMap", { "Ref" : "InstanceType" },
                                          "Arch" ] } ] },
          "UserData" : { "Fn::Base64" : { "Fn::Join" : ["",[
			  "#!/bin/bash -ex\n",
              "sudo apt-get update\n",
              "sudo apt-get install -y git puppet mongodb python-pip\n",
              "sudo pip install pymongo\n",
              
              "cd /opt\n",
			  "git clone http://github.com/svpmtrust/autotest.git autotest\n",
     
              "cd autotest\n",         
              "sed s/__GIT_HOST__/",{ "Fn::GetAtt" : [ "GitServer", "PublicDnsName" ]}, "/ testserver/env.sh.templ > testserver/env.sh\n",
              "echo export MAIL_USER=",  { "Ref" : "MailUser" }, " >> testserver/env.sh\n",
              "echo export MAIL_PWD=",  { "Ref" : "MailPassword" }, " >> testserver/env.sh\n",
              "mkdir mails\n",
              "mkdir programs\n",
              "mkdir participants\n",
              
              "cp testserver/test-server.upstart.templ /etc/init/testserver.conf\n",
              "sudo service testserver start\n"
     		]]}},
          "SecurityGroups" : [ { "Ref" : "SecurityGroup" } ]
      }
    }
  }, 
  "Outputs" : {
    "GitServerAddress" : {
      "Description" : "Location of git server to use",
      "Value" :  { "Fn::Join" : [ "", [ "http://", { "Fn::GetAtt" : [ "GitServer", "PublicDnsName" ]}]]}
    }
  }
}
